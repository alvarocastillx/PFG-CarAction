// Generated by Dagger (https://dagger.dev).
package com.acasloa946.pfg_caraction.domain;

import com.acasloa946.pfg_caraction.data.UserRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class fetchUserByNameUseCase_Factory implements Factory<fetchUserByNameUseCase> {
  private final Provider<UserRepository> userRepositoryProvider;

  public fetchUserByNameUseCase_Factory(Provider<UserRepository> userRepositoryProvider) {
    this.userRepositoryProvider = userRepositoryProvider;
  }

  @Override
  public fetchUserByNameUseCase get() {
    return newInstance(userRepositoryProvider.get());
  }

  public static fetchUserByNameUseCase_Factory create(
      Provider<UserRepository> userRepositoryProvider) {
    return new fetchUserByNameUseCase_Factory(userRepositoryProvider);
  }

  public static fetchUserByNameUseCase newInstance(UserRepository userRepository) {
    return new fetchUserByNameUseCase(userRepository);
  }
}
