// Generated by Dagger (https://dagger.dev).
package com.acasloa946.pfg_caraction.UserInterface.AuthScreens.InitScreen;

import com.acasloa946.pfg_caraction.domain.checkIfUserExistsUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class InitScreenViewmodel_Factory implements Factory<InitScreenViewmodel> {
  private final Provider<checkIfUserExistsUseCase> checkIfUserExistsUseCaseProvider;

  public InitScreenViewmodel_Factory(
      Provider<checkIfUserExistsUseCase> checkIfUserExistsUseCaseProvider) {
    this.checkIfUserExistsUseCaseProvider = checkIfUserExistsUseCaseProvider;
  }

  @Override
  public InitScreenViewmodel get() {
    return newInstance(checkIfUserExistsUseCaseProvider.get());
  }

  public static InitScreenViewmodel_Factory create(
      Provider<checkIfUserExistsUseCase> checkIfUserExistsUseCaseProvider) {
    return new InitScreenViewmodel_Factory(checkIfUserExistsUseCaseProvider);
  }

  public static InitScreenViewmodel newInstance(checkIfUserExistsUseCase checkIfUserExistsUseCase) {
    return new InitScreenViewmodel(checkIfUserExistsUseCase);
  }
}
