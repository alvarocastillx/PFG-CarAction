// Generated by Dagger (https://dagger.dev).
package com.acasloa946.pfg_caraction.UserInterface.Main.currentChatsScreen;

import com.acasloa946.pfg_caraction.domain.fetchChatsOfUserUseCase;
import com.acasloa946.pfg_caraction.domain.fetchUserUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class currentChatsViewmodel_Factory implements Factory<currentChatsViewmodel> {
  private final Provider<fetchChatsOfUserUseCase> fetchChatsOfUserUseCaseProvider;

  private final Provider<fetchUserUseCase> fetchUserUseCaseProvider;

  public currentChatsViewmodel_Factory(
      Provider<fetchChatsOfUserUseCase> fetchChatsOfUserUseCaseProvider,
      Provider<fetchUserUseCase> fetchUserUseCaseProvider) {
    this.fetchChatsOfUserUseCaseProvider = fetchChatsOfUserUseCaseProvider;
    this.fetchUserUseCaseProvider = fetchUserUseCaseProvider;
  }

  @Override
  public currentChatsViewmodel get() {
    return newInstance(fetchChatsOfUserUseCaseProvider.get(), fetchUserUseCaseProvider.get());
  }

  public static currentChatsViewmodel_Factory create(
      Provider<fetchChatsOfUserUseCase> fetchChatsOfUserUseCaseProvider,
      Provider<fetchUserUseCase> fetchUserUseCaseProvider) {
    return new currentChatsViewmodel_Factory(fetchChatsOfUserUseCaseProvider, fetchUserUseCaseProvider);
  }

  public static currentChatsViewmodel newInstance(fetchChatsOfUserUseCase fetchChatsOfUserUseCase,
      fetchUserUseCase fetchUserUseCase) {
    return new currentChatsViewmodel(fetchChatsOfUserUseCase, fetchUserUseCase);
  }
}
