// Generated by Dagger (https://dagger.dev).
package com.acasloa946.pfg_caraction.UserInterface.Main.uploadCarScreen;

import com.acasloa946.pfg_caraction.domain.addCarUseCase;
import com.acasloa946.pfg_caraction.domain.fetchUserUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class uploadCarViewmodel_Factory implements Factory<uploadCarViewmodel> {
  private final Provider<addCarUseCase> addCarUseCaseProvider;

  private final Provider<fetchUserUseCase> fetchUserUseCaseProvider;

  public uploadCarViewmodel_Factory(Provider<addCarUseCase> addCarUseCaseProvider,
      Provider<fetchUserUseCase> fetchUserUseCaseProvider) {
    this.addCarUseCaseProvider = addCarUseCaseProvider;
    this.fetchUserUseCaseProvider = fetchUserUseCaseProvider;
  }

  @Override
  public uploadCarViewmodel get() {
    return newInstance(addCarUseCaseProvider.get(), fetchUserUseCaseProvider.get());
  }

  public static uploadCarViewmodel_Factory create(Provider<addCarUseCase> addCarUseCaseProvider,
      Provider<fetchUserUseCase> fetchUserUseCaseProvider) {
    return new uploadCarViewmodel_Factory(addCarUseCaseProvider, fetchUserUseCaseProvider);
  }

  public static uploadCarViewmodel newInstance(addCarUseCase addCarUseCase,
      fetchUserUseCase fetchUserUseCase) {
    return new uploadCarViewmodel(addCarUseCase, fetchUserUseCase);
  }
}
