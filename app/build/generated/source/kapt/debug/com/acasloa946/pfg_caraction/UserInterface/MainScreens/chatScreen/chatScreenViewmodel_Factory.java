// Generated by Dagger (https://dagger.dev).
package com.acasloa946.pfg_caraction.UserInterface.MainScreens.chatScreen;

import com.acasloa946.pfg_caraction.domain.UsersUseCases.fetchUserByNameUseCase;
import com.acasloa946.pfg_caraction.domain.UsersUseCases.getMessagesUseCase;
import com.acasloa946.pfg_caraction.domain.UsersUseCases.sendMessageUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class chatScreenViewmodel_Factory implements Factory<chatScreenViewmodel> {
  private final Provider<sendMessageUseCase> sendMessageUseCaseProvider;

  private final Provider<fetchUserByNameUseCase> fetchUserByNameUseCaseProvider;

  private final Provider<getMessagesUseCase> getMessagesUseCaseProvider;

  public chatScreenViewmodel_Factory(Provider<sendMessageUseCase> sendMessageUseCaseProvider,
      Provider<fetchUserByNameUseCase> fetchUserByNameUseCaseProvider,
      Provider<getMessagesUseCase> getMessagesUseCaseProvider) {
    this.sendMessageUseCaseProvider = sendMessageUseCaseProvider;
    this.fetchUserByNameUseCaseProvider = fetchUserByNameUseCaseProvider;
    this.getMessagesUseCaseProvider = getMessagesUseCaseProvider;
  }

  @Override
  public chatScreenViewmodel get() {
    return newInstance(sendMessageUseCaseProvider.get(), fetchUserByNameUseCaseProvider.get(), getMessagesUseCaseProvider.get());
  }

  public static chatScreenViewmodel_Factory create(
      Provider<sendMessageUseCase> sendMessageUseCaseProvider,
      Provider<fetchUserByNameUseCase> fetchUserByNameUseCaseProvider,
      Provider<getMessagesUseCase> getMessagesUseCaseProvider) {
    return new chatScreenViewmodel_Factory(sendMessageUseCaseProvider, fetchUserByNameUseCaseProvider, getMessagesUseCaseProvider);
  }

  public static chatScreenViewmodel newInstance(sendMessageUseCase sendMessageUseCase,
      fetchUserByNameUseCase fetchUserByNameUseCase, getMessagesUseCase getMessagesUseCase) {
    return new chatScreenViewmodel(sendMessageUseCase, fetchUserByNameUseCase, getMessagesUseCase);
  }
}
